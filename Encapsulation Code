using System;
class MainClass {
// The base Hero class
class Hero{
public string name = "Hero Class";
public string desc = "Basic Desc";
private int level;
//encapsulation of the level var
public int charLevel {

get //getter and setters for the char level
{
return level;
}

set
{
level = value;
}

}

//adding a function to show polymorphism
public virtual void HeroSound() //notice the virtual keyword
{
Console.WriteLine("\nThe Hero whispers something");
}
}
//A class the inherits from the Hero class
class Rouge : Hero{
public int size;
//polymorphism notice the override keyword
public override void HeroSound()
{
Console.WriteLine("\nThe Rouge says: sneaky");
}
}
//another class that takes info from the main hero class
class Tank : Hero{
public int Strength;

public override void HeroSound()
{
Console.WriteLine("\nThe Tank says: go");
}
}

class Melee : Hero{
public int Attack;

public override void HeroSound()
{
Console.WriteLine("\nThe Melee says: attack");
}
}
public static void Main (string[] args) {

//declaring a new instance of a main Hero class and printing out the base stats
Hero gigi = new Hero();
Console.WriteLine(gigi.name);
gigi.desc = "the hero's description";
Console.WriteLine(gigi.desc);
gigi.charLevel = 5;//using charLevel instead of level becuase level is private
Console.WriteLine(gigi.charLevel);


Console.WriteLine("\n ---------------------------------- \n");
//an instance of a rouge class using vars from both classes
Rouge slooth = new Rouge();
slooth.name = "Kat";
Console.WriteLine(slooth.name);
slooth.desc = "a description of the Kat";
Console.WriteLine(slooth.desc);
slooth.charLevel = 15;
Console.WriteLine(slooth.charLevel);//using charLevel instead of level becuase level is private


Console.WriteLine("\n ---------------------------------- \n");
//an instance of a Tank class using vars from both classes
Tank chad = new Tank();
chad.name = "Chad";
Console.WriteLine(chad.name);
chad.desc = "a description of Chad";
Console.WriteLine(chad.desc);
chad.charLevel = 10;
Console.WriteLine(chad.charLevel);//using charLevel instead of level becuase level is private
chad.Strength = 20;
Console.WriteLine(chad.Strength);
//outlines the strength characteristic within the tank class

Console.WriteLine("\n ---------------------------------- \n");
//a creation of a third class melee using vars from the previous classes
Melee fighter = new Melee();
fighter.name = "Melee";
Console.WriteLine(fighter.name);
fighter.desc = "a description of Melee";
Console.WriteLine(fighter.desc);
fighter.charLevel = 10;
Console.WriteLine(fighter.charLevel);//using charLevel because level is private and charLevel is public

//calling the same function from each class and seeing the difference
gigi.HeroSound();
slooth.HeroSound();
chad.HeroSound();
fighter.HeroSound();
}

}
